<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://silesh.com/</id><title>Silesh.com</title><subtitle>My personal blog. Check out the latest post or select via Categories</subtitle> <updated>2021-09-21T10:55:26+08:00</updated> <author> <name>Silesh Chandran</name> <uri>https://silesh.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://silesh.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://silesh.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Silesh Chandran </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>CAVEDB 1- Creating a key-value database in C++</title><link href="https://silesh.com/posts/db01-key-value/" rel="alternate" type="text/html" title="CAVEDB 1- Creating a key-value database in C++" /><published>2021-09-19T20:40:00+08:00</published> <updated>2021-09-21T10:54:55+08:00</updated> <id>https://silesh.com/posts/db01-key-value/</id> <content src="https://silesh.com/posts/db01-key-value/" /> <author> <name>Silesh Chandran</name> </author> <category term="backend" /> <category term="projects" /> <summary> Welcome to this new series of posts in which I will delve into creating a database from scratch in C++. Lets begin by setting expectations and defining the scope of this project. In the next secion I will elaborate on how the data is actually stored. I plan to add more complexity in upcoming posts and also build an API layer on top of this to do CRUD operations over the network. Features expec... </summary> </entry> <entry><title>E-COM 4- Credential based and token based authentication</title><link href="https://silesh.com/posts/ecom4-auth/" rel="alternate" type="text/html" title="E-COM 4- Credential based and token based authentication" /><published>2021-08-07T22:40:00+08:00</published> <updated>2021-08-07T22:40:00+08:00</updated> <id>https://silesh.com/posts/ecom4-auth/</id> <content src="https://silesh.com/posts/ecom4-auth/" /> <author> <name>Silesh Chandran</name> </author> <category term="backend" /> <category term="projects" /> <summary> Before we delve into adding more complex features, it would be better to add some other core necessities that a server needs. I’m referring to user authentication. Currently all of the APIs can be used by anyone, this should not be the case and we should ideally authenticate users and allow operations only post that. We’ll start by making some changes to the user schema and then authenticating ... </summary> </entry> <entry><title>E-COM 3- Regret, repent, and restart</title><link href="https://silesh.com/posts/ecom3-restart/" rel="alternate" type="text/html" title="E-COM 3- Regret, repent, and restart" /><published>2021-07-30T22:40:00+08:00</published> <updated>2021-08-01T20:23:09+08:00</updated> <id>https://silesh.com/posts/ecom3-restart/</id> <content src="https://silesh.com/posts/ecom3-restart/" /> <author> <name>Silesh Chandran</name> </author> <category term="backend" /> <category term="projects" /> <summary> I might have bitten of a lot more than I can chew by deciding to use MongoDB with Java. I have made the difficult decision to restart this project and build the backend in Node instead. I will elaborate on my reasoning later, but for this post, we will catch up to last post but this time building a server using Express.js and using mongoDB with Mongoose. Why Node and not Java? While investigat... </summary> </entry> <entry><title>E-COM 2- Setting up MongoDB to use with Java and Spring</title><link href="https://silesh.com/posts/ecom2-mongo/" rel="alternate" type="text/html" title="E-COM 2- Setting up MongoDB to use with Java and Spring" /><published>2021-07-07T22:40:00+08:00</published> <updated>2021-07-07T22:40:00+08:00</updated> <id>https://silesh.com/posts/ecom2-mongo/</id> <content src="https://silesh.com/posts/ecom2-mongo/" /> <author> <name>Silesh Chandran</name> </author> <category term="backend" /> <category term="projects" /> <summary> This post will go over how to setup MongoDB (atlas) and move the storage of our product list over rather than keep it in memory. We will also see how to make use of spring repository to make crud operations and object mapping from DB much easier. Getting started with MongoDB Create an account on mongodb.com. Then create a new cluster on MongoDB Atlas. We can then click on connect to create a d... </summary> </entry> <entry><title>E-COM 1- Building a REST server and APIs with Java and Spring</title><link href="https://silesh.com/posts/ecom1-spring/" rel="alternate" type="text/html" title="E-COM 1- Building a REST server and APIs with Java and Spring" /><published>2021-06-25T22:40:00+08:00</published> <updated>2021-06-25T22:40:00+08:00</updated> <id>https://silesh.com/posts/ecom1-spring/</id> <content src="https://silesh.com/posts/ecom1-spring/" /> <author> <name>Silesh Chandran</name> </author> <category term="backend" /> <category term="projects" /> <summary> This post will serve as the starting point for a lot of big things to come. The plan is to incrementally develop a project (an e-commerece application) and experiment with and implement various industry relevant features such as load balancing, caching, synchronization etc. To do this we need a starting point. In this post I will cover the basics of getting started with a simple REST server wit... </summary> </entry> </feed>
